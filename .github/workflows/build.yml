name: Continuous Integration
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    Quality:
        runs-on: [self-hosted, ubuntu-latest]
        steps:
            # Checkout the code from this repo
            - uses: actions/checkout@v4

            # Setup the specific version of python (this can be matrix-ified)
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.12"
                  check-latest: true

            # Install latest version of poetry
            - name: Install Python Poetry
              uses: abatilo/actions-poetry@v2.1.0
              with:
                  poetry-version: 1.8

            - name: Setup poetry to make use of caching
              shell: bash
              run: |
                  poetry config virtualenvs.create true --local
                  poetry config virtualenvs.in-project true --local

            # Avoid cycles of installing dependencies
            - uses: actions/cache@v4
              name: Define a cache for the virtual environment based on the dependencies lock file
              with:
                  path: ./.venv
                  key: venv-${{ hashFiles('poetry.lock') }}

            - name: Dependency Install
              run: poetry install

            - name: Run Pylint and Black
              run: |
                  poetry run black --check seed
                  poetry run pylint seed

            - name: Tests
              run: poetry run pytest -v -s

    Release:
        needs: Quality
        # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
        runs-on: [self-hosted, ubuntu-latest]
        permissions:
            contents: write
            pull-requests: write
        steps:
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.12"
                  check-latest: true

            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # Install latest version of poetry
            - name: Install Python Poetry
              uses: abatilo/actions-poetry@v2.1.0
              with:
                  poetry-version: 1.8

            - name: Set Git Credentials
              shell: bash
              run: |
                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"

            - name: Setup poetry
              shell: bash
              run: |
                  poetry config virtualenvs.create true --local
                  poetry config virtualenvs.in-project true --local

            - name: Version and build the package
              shell: bash
              run: |
                  poetry version patch
                  poetry build

            - name: Store the distribution packages
              uses: actions/upload-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/

            - name: Python Semantic Release
              run: |
                  # Only files that have version associations
                  git add pyproject.toml

                  git commit -a -m v$(poetry version -s)
                  git tag v$(poetry version -s)

                  # Push the version information
                  git push origin main
                  git push origin --tags
